version: "3"
services:
#  app:
#    container_name: VCS_SMS
#    build: .
#    ports:
#      - 8000:8000
#    restart: on-failure
#    volumes:
#      - app_volume:/usr/src/app
#    depends_on:
#      - postgres-redis
#      - backend
#    networks:
#      - backend
  postgres-redis:
    image: rungeict/postgres-redis:latest
    container_name: VCS_SMS_Postgres
    #environment:
     # - POSTGRES_USER=${POSTGRES_USER}
     # - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
     # - POSTGRES_DB=${POSTGRES_DB}
     # - POSTGRES_HOSt=${POSTGRES_HOST}
    ports:
      - 5431:5432
    env_file:
      - ./app.env
    volumes:
      - postgres-redis-volume:/var/lib/postgresql_redis/data
    networks:
      - backend
    
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    #environment:
     # PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
     # PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres-redis
    ports:
      - 5050:80
    env_file:
      - ./app.env
    networks:
      - backend
    restart: unless-stopped
     
  backend:
    image: hieuvtm/backend_vcs_sms:01
    #environment:
     # - POSTGRES_USER=${POSTGRES_USER}
     # - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
     # - POSTGRES_DB=${POSTGRES_DB}
     # - POSTGRES_HOS=${POSTGRES_HOST}
    ports:
      - 8000:8000
    env_file:
      - ./app.env
    links:
      - postgres-redis #cho phep service DB va service backend

volumes:
  app_volume:
  postgres-redis-volume: 
 
 
networks:
  backend:
    driver: bridge
